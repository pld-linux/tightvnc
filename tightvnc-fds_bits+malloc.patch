diff -ruN vnc_unixsrc./Xvnc/include/Xpoll.h vnc_unixsrc/Xvnc/include/Xpoll.h
--- vnc_unixsrc./Xvnc/include/Xpoll.h	2002-04-30 15:07:30.000000000 +0200
+++ vnc_unixsrc/Xvnc/include/Xpoll.h	2005-02-03 21:11:29.539515376 +0100
@@ -77,7 +77,7 @@
 # if BSD < 198911	/* 198911 == OSF/1, 199103 == CSRG_BASED */
 #  ifndef luna		/* and even though on LUNA BSD ==  43, it has it */
 typedef struct fd_set {
-	fd_mask fds_bits[howmany(FD_SETSIZE, NFDBITS)];
+	fd_mask __fds_bits[howmany(FD_SETSIZE, NFDBITS)];
 } fd_set;
 #  endif
 # endif
@@ -90,13 +90,13 @@
 #endif
 
 #ifndef FD_SET
-#define FD_SET(n, p)    ((p)->fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
+#define FD_SET(n, p)    ((p)->__fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
 #endif
 #ifndef FD_CLR
-#define FD_CLR(n, p)    ((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
+#define FD_CLR(n, p)    ((p)->__fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
 #endif
 #ifndef FD_ISSET
-#define FD_ISSET(n, p)  ((p)->fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
+#define FD_ISSET(n, p)  ((p)->__fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
 #endif
 #ifndef FD_ZERO
 #define FD_ZERO(p)      bzero((char *)(p), sizeof(*(p)))
@@ -115,50 +115,50 @@
  * array.
  */
 #define XFD_ANYSET(p) \
-		((p)->fds_bits[0] || (p)->fds_bits[1] || \
-		(p)->fds_bits[2] || (p)->fds_bits[3] || \
-		(p)->fds_bits[4] || (p)->fds_bits[5] || \
-		(p)->fds_bits[6] || (p)->fds_bits[7])
+		((p)->__fds_bits[0] || (p)->__fds_bits[1] || \
+		(p)->__fds_bits[2] || (p)->__fds_bits[3] || \
+		(p)->__fds_bits[4] || (p)->__fds_bits[5] || \
+		(p)->__fds_bits[6] || (p)->__fds_bits[7])
 
 #define XFD_COPYSET(src,dst) \
-		(dst)->fds_bits[0] = (src)->fds_bits[0]; \
-		(dst)->fds_bits[1] = (src)->fds_bits[1]; \
-		(dst)->fds_bits[2] = (src)->fds_bits[2]; \
-		(dst)->fds_bits[3] = (src)->fds_bits[3]; \
-		(dst)->fds_bits[4] = (src)->fds_bits[4]; \
-		(dst)->fds_bits[5] = (src)->fds_bits[5]; \
-		(dst)->fds_bits[6] = (src)->fds_bits[6]; \
-		(dst)->fds_bits[7] = (src)->fds_bits[7];
+		(dst)->__fds_bits[0] = (src)->__fds_bits[0]; \
+		(dst)->__fds_bits[1] = (src)->__fds_bits[1]; \
+		(dst)->__fds_bits[2] = (src)->__fds_bits[2]; \
+		(dst)->__fds_bits[3] = (src)->__fds_bits[3]; \
+		(dst)->__fds_bits[4] = (src)->__fds_bits[4]; \
+		(dst)->__fds_bits[5] = (src)->__fds_bits[5]; \
+		(dst)->__fds_bits[6] = (src)->__fds_bits[6]; \
+		(dst)->__fds_bits[7] = (src)->__fds_bits[7];
 
 #define XFD_ANDSET(dst,b1,b2) \
-		(dst)->fds_bits[0] = ((b1)->fds_bits[0] & (b2)->fds_bits[0]); \
-		(dst)->fds_bits[1] = ((b1)->fds_bits[1] & (b2)->fds_bits[1]); \
-		(dst)->fds_bits[2] = ((b1)->fds_bits[2] & (b2)->fds_bits[2]); \
-		(dst)->fds_bits[3] = ((b1)->fds_bits[3] & (b2)->fds_bits[3]); \
-		(dst)->fds_bits[4] = ((b1)->fds_bits[4] & (b2)->fds_bits[4]); \
-		(dst)->fds_bits[5] = ((b1)->fds_bits[5] & (b2)->fds_bits[5]); \
-		(dst)->fds_bits[6] = ((b1)->fds_bits[6] & (b2)->fds_bits[6]); \
-		(dst)->fds_bits[7] = ((b1)->fds_bits[7] & (b2)->fds_bits[7]);
+		(dst)->__fds_bits[0] = ((b1)->__fds_bits[0] & (b2)->__fds_bits[0]); \
+		(dst)->__fds_bits[1] = ((b1)->__fds_bits[1] & (b2)->__fds_bits[1]); \
+		(dst)->__fds_bits[2] = ((b1)->__fds_bits[2] & (b2)->__fds_bits[2]); \
+		(dst)->__fds_bits[3] = ((b1)->__fds_bits[3] & (b2)->__fds_bits[3]); \
+		(dst)->__fds_bits[4] = ((b1)->__fds_bits[4] & (b2)->__fds_bits[4]); \
+		(dst)->__fds_bits[5] = ((b1)->__fds_bits[5] & (b2)->__fds_bits[5]); \
+		(dst)->__fds_bits[6] = ((b1)->__fds_bits[6] & (b2)->__fds_bits[6]); \
+		(dst)->__fds_bits[7] = ((b1)->__fds_bits[7] & (b2)->__fds_bits[7]);
 
 #define XFD_ORSET(dst,b1,b2) \
-		(dst)->fds_bits[0] = ((b1)->fds_bits[0] | (b2)->fds_bits[0]); \
-		(dst)->fds_bits[1] = ((b1)->fds_bits[1] | (b2)->fds_bits[1]); \
-		(dst)->fds_bits[2] = ((b1)->fds_bits[2] | (b2)->fds_bits[2]); \
-		(dst)->fds_bits[3] = ((b1)->fds_bits[3] | (b2)->fds_bits[3]); \
-		(dst)->fds_bits[4] = ((b1)->fds_bits[4] | (b2)->fds_bits[4]); \
-		(dst)->fds_bits[5] = ((b1)->fds_bits[5] | (b2)->fds_bits[5]); \
-		(dst)->fds_bits[6] = ((b1)->fds_bits[6] | (b2)->fds_bits[6]); \
-		(dst)->fds_bits[7] = ((b1)->fds_bits[7] | (b2)->fds_bits[7]);
+		(dst)->__fds_bits[0] = ((b1)->__fds_bits[0] | (b2)->__fds_bits[0]); \
+		(dst)->__fds_bits[1] = ((b1)->__fds_bits[1] | (b2)->__fds_bits[1]); \
+		(dst)->__fds_bits[2] = ((b1)->__fds_bits[2] | (b2)->__fds_bits[2]); \
+		(dst)->__fds_bits[3] = ((b1)->__fds_bits[3] | (b2)->__fds_bits[3]); \
+		(dst)->__fds_bits[4] = ((b1)->__fds_bits[4] | (b2)->__fds_bits[4]); \
+		(dst)->__fds_bits[5] = ((b1)->__fds_bits[5] | (b2)->__fds_bits[5]); \
+		(dst)->__fds_bits[6] = ((b1)->__fds_bits[6] | (b2)->__fds_bits[6]); \
+		(dst)->__fds_bits[7] = ((b1)->__fds_bits[7] | (b2)->__fds_bits[7]);
 
 #define XFD_UNSET(dst,b1) \
-		(dst)->fds_bits[0] &= ~((b1)->fds_bits[0]); \
-		(dst)->fds_bits[1] &= ~((b1)->fds_bits[1]); \
-		(dst)->fds_bits[2] &= ~((b1)->fds_bits[2]); \
-		(dst)->fds_bits[3] &= ~((b1)->fds_bits[3]); \
-		(dst)->fds_bits[4] &= ~((b1)->fds_bits[4]); \
-		(dst)->fds_bits[5] &= ~((b1)->fds_bits[5]); \
-		(dst)->fds_bits[6] &= ~((b1)->fds_bits[6]); \
-		(dst)->fds_bits[7] &= ~((b1)->fds_bits[7]);
+		(dst)->__fds_bits[0] &= ~((b1)->__fds_bits[0]); \
+		(dst)->__fds_bits[1] &= ~((b1)->__fds_bits[1]); \
+		(dst)->__fds_bits[2] &= ~((b1)->__fds_bits[2]); \
+		(dst)->__fds_bits[3] &= ~((b1)->__fds_bits[3]); \
+		(dst)->__fds_bits[4] &= ~((b1)->__fds_bits[4]); \
+		(dst)->__fds_bits[5] &= ~((b1)->__fds_bits[5]); \
+		(dst)->__fds_bits[6] &= ~((b1)->__fds_bits[6]); \
+		(dst)->__fds_bits[7] &= ~((b1)->__fds_bits[7]);
 
 #else /* USE_POLL */
 #include <sys/poll.h>
diff -ruN vnc_unixsrc./Xvnc/lib/Xau/AuRead.c vnc_unixsrc/Xvnc/lib/Xau/AuRead.c
--- vnc_unixsrc./Xvnc/lib/Xau/AuRead.c	2000-06-11 14:00:52.000000000 +0200
+++ vnc_unixsrc/Xvnc/lib/Xau/AuRead.c	2005-02-03 21:13:11.711982800 +0100
@@ -49,7 +49,7 @@
 FILE	*file;
 {
     unsigned short  len;
-    char	    *data, *malloc ();
+    char	    *data;
 
     if (read_short (&len, file) == 0)
 	return 0;
@@ -76,7 +76,6 @@
 {
     Xauth   local;
     Xauth   *ret;
-    char    *malloc ();
 
     if (read_short (&local.family, auth_file) == 0)
 	return 0;
diff -ruN vnc_unixsrc./Xvnc/lib/Xau/AuWrite.c vnc_unixsrc/Xvnc/lib/Xau/AuWrite.c
--- vnc_unixsrc./Xvnc/lib/Xau/AuWrite.c	2000-06-11 14:00:52.000000000 +0200
+++ vnc_unixsrc/Xvnc/lib/Xau/AuWrite.c	2005-02-03 21:13:16.981181760 +0100
@@ -61,8 +61,6 @@
 FILE	*auth_file;
 Xauth	*auth;
 {
-    char    *malloc ();
-
     if (write_short (auth->family, auth_file) == 0)
 	return 0;
     if (write_counted_string (auth->address_length, auth->address, auth_file) == 0)
diff -ruN vnc_unixsrc./Xvnc/programs/Xserver/os/connection.c vnc_unixsrc/Xvnc/programs/Xserver/os/connection.c
--- vnc_unixsrc./Xvnc/programs/Xserver/os/connection.c	2003-01-29 13:33:19.000000000 +0100
+++ vnc_unixsrc/Xvnc/programs/Xserver/os/connection.c	2005-02-03 21:11:55.987494672 +0100
@@ -783,7 +783,7 @@
 #ifndef AMOEBA
     XFD_ANDSET (&tmask, (fd_set*)closure, &WellKnownConnections);
 #ifndef WIN32
-    readyconnections = tmask.fds_bits[0];
+    readyconnections = tmask.__fds_bits[0];
     if (!readyconnections)
 	return TRUE;
 #else
@@ -984,7 +984,7 @@
 #ifndef WIN32
     for (i=0; i<howmany(XFD_SETSIZE, NFDBITS); i++)
     {
-	mask = AllClients.fds_bits[i];
+	mask = AllClients.__fds_bits[i];
         while (mask)
     	{
 	    curoff = ffs (mask) - 1;
diff -ruN vnc_unixsrc./Xvnc/programs/Xserver/os/io.c vnc_unixsrc/Xvnc/programs/Xserver/os/io.c
--- vnc_unixsrc./Xvnc/programs/Xserver/os/io.c	2000-06-11 14:00:52.000000000 +0200
+++ vnc_unixsrc/Xvnc/programs/Xserver/os/io.c	2005-02-03 21:12:00.758769328 +0100
@@ -992,8 +992,8 @@
 #ifndef WIN32
     for (base = 0; base < howmany(XFD_SETSIZE, NFDBITS); base++)
     {
-	mask = OutputPending.fds_bits[ base ];
-	OutputPending.fds_bits[ base ] = 0;
+	mask = OutputPending.__fds_bits[ base ];
+	OutputPending.__fds_bits[ base ] = 0;
 	while (mask)
 	{
 	    index = ffs(mask) - 1;
diff -ruN vnc_unixsrc./Xvnc/programs/Xserver/os/WaitFor.c vnc_unixsrc/Xvnc/programs/Xserver/os/WaitFor.c
--- vnc_unixsrc./Xvnc/programs/Xserver/os/WaitFor.c	2000-06-11 14:00:52.000000000 +0200
+++ vnc_unixsrc/Xvnc/programs/Xserver/os/WaitFor.c	2005-02-03 21:11:46.014010872 +0100
@@ -390,7 +390,7 @@
 	    XFD_ANDSET(&devicesReadable, &LastSelectMask, &EnabledDevices);
 	    XFD_ANDSET(&clientsReadable, &LastSelectMask, &AllClients); 
 #ifndef WIN32
-	    if (LastSelectMask.fds_bits[0] & WellKnownConnections.fds_bits[0]) 
+	    if (LastSelectMask.__fds_bits[0] & WellKnownConnections.__fds_bits[0]) 
 #else
 	    XFD_ANDSET(&tmp_set, &LastSelectMask, &WellKnownConnections);
 	    if (XFD_ANYSET(&tmp_set))
@@ -414,11 +414,11 @@
 	{
 	    int highest_priority;
 
-	    while (clientsReadable.fds_bits[i])
+	    while (clientsReadable.__fds_bits[i])
 	    {
 	        int client_priority, client_index;
 
-		curclient = ffs (clientsReadable.fds_bits[i]) - 1;
+		curclient = ffs (clientsReadable.__fds_bits[i]) - 1;
 		client_index = ConnectionTranslation[curclient + (i << 5)];
 #else
 	int highest_priority;
@@ -463,7 +463,7 @@
 		    pClientsReady[nready++] = client_index;
 		}
 #ifndef WIN32
-		clientsReadable.fds_bits[i] &= ~(((fd_mask)1) << curclient);
+		clientsReadable.__fds_bits[i] &= ~(((fd_mask)1) << curclient);
 	    }
 #else
 	    FD_CLR(curclient, &clientsReadable);
